import { StoreData, CustomPage } from '../../types/store';
import { getTemplate } from '../../templates/registry';

export const generateCustomPageHTML = (storeData: StoreData, page: CustomPage): string => {
  const { settings } = storeData;
  
  // Get current template
  const currentTemplate = settings.currentTemplate || 'default';
  const templateData = getTemplate(currentTemplate);

  // Generate page content based on page type
  let pageContent = '';
  
  if (page.pageType === 'products' && page.showAllProducts) {
    // For template-based generation, we'll use a simplified approach
    pageContent = `
      <section class="container mx-auto px-6 py-16">
        <div class="text-center mb-12">
          <h1 class="text-4xl font-bold mb-4" style="color: ${settings.primaryColor};">${page.title}</h1>
          <p class="text-gray-600">${page.content}</p>
          <div class="w-24 h-1 mx-auto mt-4 rounded" style="background-color: ${settings.accentColor};"></div>
        </div>
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6">
          ${storeData.products.map(product => `
            <div class="bg-white rounded-lg shadow-md overflow-hidden hover:shadow-lg transition-shadow">
              <img src="${product.image}" alt="${product.name}" class="w-full h-48 object-cover" />
              <div class="p-4">
                <h3 class="font-semibold text-lg mb-2">${product.name}</h3>
                <p class="text-gray-600 text-sm mb-3">${product.description}</p>
                <div class="flex justify-between items-center">
                  <span class="text-xl font-bold" style="color: ${settings.primaryColor};">${product.price} ر.س</span>
                  <button class="whatsapp-buy-btn px-4 py-2 text-white rounded-lg" style="background-color: #25D366;">
                    اشتري الآن
                  </button>
                </div>
              </div>
            </div>
          `).join('')}
        </div>
      </section>
    `;
  } else {
    // Generate content page
    pageContent = `
      <section class="container mx-auto px-6 py-16">
        <div class="max-w-4xl mx-auto">
          <div class="text-center mb-12">
            <h1 class="text-4xl font-bold mb-4" style="color: ${settings.primaryColor};">${page.title}</h1>
            <div class="w-24 h-1 mx-auto rounded" style="background-color: ${settings.accentColor};"></div>
          </div>
          <div class="prose prose-lg max-w-none text-text">
            ${page.content.split('\n').map(paragraph => 
              paragraph.trim() ? `<p class="mb-4 leading-relaxed">${paragraph}</p>` : ''
            ).join('')}
          </div>
        </div>
      </section>
    `;
  }

  return `<!DOCTYPE html>
<html lang="ar" dir="rtl">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>${page.title} - ${settings.storeName}</title>
    <meta name="description" content="${page.metaDescription || page.content.substring(0, 160)}">
    ${settings.favicon ? `<link rel="icon" type="image/x-icon" href="${settings.favicon}">` : ''}
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=${settings.fontFamily.replace(' ', '+')}:wght@300;400;500;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="styles.css">
</head>
<body class="font-sans">
    <!-- Header will be generated by template -->
    <main>
        ${pageContent}
    </main>
    <!-- Footer will be generated by template -->
    <script src="main.js"></script>
</body>
</html>`;
};

export const generateAllCustomPages = (storeData: StoreData): { [filename: string]: string } => {
  const pages: { [filename: string]: string } = {};
  
  storeData.pages.forEach(page => {
    const filename = `${page.slug}.html`;
    pages[filename] = generateCustomPageHTML(storeData, page);
  });
  
  return pages;
};