import JSZip from 'jszip';
import { saveAs } from 'file-saver';
import { StoreData } from '../types';
import { generateStoreCSS, generateStoreJS } from '../generators';
import { processProductImages, processStoreAssets } from './imageProcessor';
import { 
  renderFullPageToHTML, 
  renderProductsPageToHTML, 
  renderProductDetailPageToHTML, 
  renderCustomPageToHTML 
} from './reactRenderer';

export const exportStore = async (storeData: StoreData): Promise<boolean> => {
  try {
    const zip = new JSZip();
    
    // Create main HTML file using ReactDOMServer
    const htmlContent = renderFullPageToHTML(storeData);
    zip.file('index.html', htmlContent);
    
    // Create CSS folder and file
    const cssFolder = zip.folder('css');
    const cssContent = generateStoreCSS(storeData);
    cssFolder?.file('style.css', cssContent);
    
    // Create JS folder and file
    const jsFolder = zip.folder('js');
    const jsContent = generateStoreJS();
    jsFolder?.file('main.js', jsContent);
    
    // Create products page using ReactDOMServer
    const productsHTML = renderProductsPageToHTML(storeData);
    zip.file('products.html', productsHTML);
    
    // Create product detail pages using ReactDOMServer
    for (const product of storeData.products) {
      try {
        const relatedProducts = storeData.products
          .filter(p => p.id !== product.id && p.category === product.category)
          .slice(0, storeData.settings.productDetailSettings.relatedProductsLimit);
        
        const productDetailHTML = renderProductDetailPageToHTML(product, storeData.settings, relatedProducts);
        zip.file(`product-${product.id}.html`, productDetailHTML);
      } catch (error) {
        console.warn(`Failed to generate detail page for product ${product.id}:`, error);
      }
    }
    
    // Process and add images
    const imagesFolder = zip.folder('images');
    const processedImages = processProductImages(storeData.products);
    
    processedImages.forEach(image => {
      imagesFolder?.file(image.filename, image.data);
    });
    
    // Process and add store assets
    const processedAssets = processStoreAssets(storeData.settings);
    processedAssets.forEach(asset => {
      zip.file(asset.filename, asset.data);
    });
    
    // Create custom pages using ReactDOMServer
    for (const page of storeData.customPages) {
      if (page.isPublished) {
        try {
          const pageHTML = renderCustomPageToHTML(page, storeData.settings);
          zip.file(`${page.slug}.html`, pageHTML);
        } catch (error) {
          console.warn(`Failed to generate page ${page.slug}:`, error);
        }
      }
    }
    
    // Create README file
    const readmeContent = generateReadmeContent(storeData);
    zip.file('README.md', readmeContent);
    
    // Generate and download the zip file
    const blob = await zip.generateAsync({ type: 'blob' });
    const fileName = `${storeData.settings.storeName.replace(/[^a-zA-Z0-9\u0600-\u06FF]/g, '_')}_store.zip`;
    saveAs(blob, fileName);
    
    return true;
  } catch (error) {
    console.error('Error creating zip file:', error);
    throw new Error(`ูุดู ูู ุชุตุฏูุฑ ุงููุชุฌุฑ ุจุงุณุชุฎุฏุงู ReactDOMServer: ${error instanceof Error ? error.message : 'ุฎุทุฃ ุบูุฑ ูุนุฑูู'}`);
  }
};

const generateReadmeContent = (storeData: StoreData): string => {
  return `# ${storeData.settings.storeName}

## ุชูููุฉ ุงูุชุตุฏูุฑ
ุชู ุฅูุดุงุก ูุฐุง ุงููุชุฌุฑ ุจุงุณุชุฎุฏุงู **ReactDOMServer.renderToStaticMarkup** ูุชุญููู ููููุงุช React ุฅูู HTML ุซุงุจุช ูุธูู.

### ุงููุฒุงูุง:
- โ HTML ูุธูู ุจุฏูู ูุณูู React ุฅุถุงููุฉ
- โ ุฃุฏุงุก ุณุฑูุน - ูุง ูุญุชุงุฌ JavaScript ูุนุฑุถ ุงููุญุชูู
- โ SEO ูุญุณู - ุงููุญุชูู ูุชุงุญ ููุฑุงู ููุญุฑูุงุช ุงูุจุญุซ
- โ ูุชูุงูู ูุน ุฌููุน ุงููุชุตูุญุงุช
- โ ูููู ุฑูุนู ุนูู ุฃู ุฎุงุฏู ููุจ

## ูุตู ุงููุชุฌุฑ
${storeData.settings.description}

## ูุนูููุงุช ุงูุงุชุตุงู
- ุงูุจุฑูุฏ ุงูุฅููุชุฑููู: ${storeData.settings.contactInfo.email || 'ุบูุฑ ูุญุฏุฏ'}
- ุงููุงุชู: ${storeData.settings.contactInfo.phone || 'ุบูุฑ ูุญุฏุฏ'}
- ุงูุนููุงู: ${storeData.settings.contactInfo.address || 'ุบูุฑ ูุญุฏุฏ'}

## ุงููููุงุช ุงููุถููุฉ
- index.html - ุงูุตูุญุฉ ุงูุฑุฆูุณูุฉ ูููุชุฌุฑ
- products.html - ุตูุญุฉ ุฌููุน ุงูููุชุฌุงุช
- product-[ID].html - ุตูุญุงุช ุชูุงุตูู ุงูููุชุฌุงุช (${storeData.products.length} ุตูุญุฉ)
- css/style.css - ููู ุงูุฃููุงุท ุงูุฃุณุงุณู
- js/main.js - ููู ุงูุฌุงูุง ุณูุฑูุจุช ูููุธุงุฆู ุงูุชูุงุนููุฉ
- images/ - ูุฌูุฏ ุตูุฑ ุงูููุชุฌุงุช (${storeData.products.length} ุตูุฑุฉ)
${storeData.customPages.length > 0 ? `\n## ุงูุตูุญุงุช ุงููุฎุตุตุฉ\n${storeData.customPages.filter(p => p.isPublished).map(page => `- ${page.slug}.html - ${page.title}`).join('\n')}` : ''}

## ุฅุญุตุงุฆูุงุช ุงููุชุฌุฑ
- ุนุฏุฏ ุงูููุชุฌุงุช: ${storeData.products.length}
- ุงูููุชุฌุงุช ุงููููุฒุฉ: ${storeData.products.filter(p => p.isFeatured).length}
- ุงูุฃุนูู ูุจูุนุงู: ${storeData.products.filter(p => p.isBestSeller).length}
- ุงูููุชุฌุงุช ุงููุฎูุถุฉ: ${storeData.products.filter(p => p.isOnSale).length}
- ุงูุตูุญุงุช ุงููุฎุตุตุฉ: ${storeData.customPages.filter(p => p.isPublished).length}

## ููููุฉ ุงูุงุณุชุฎุฏุงู
1. ูู ุจุฑูุน ุงููููุงุช ุฅูู ุฎุงุฏู ููุจ
2. ุชุฃูุฏ ูู ุฃู ุฌููุน ุงููููุงุช ูุงููุฌูุฏุงุช ูู ููุณ ุงููุณุชูู
3. ุงูุชุญ index.html ูู ุงููุชุตูุญ

## ุงูุชูููุงุช ุงููุณุชุฎุฏูุฉ
- **ReactDOMServer**: ูุชุญููู ููููุงุช React ุฅูู HTML ุซุงุจุช
- **Tailwind CSS**: ููุชุตููู ุงููุชุฌุงูุจ ูุงูุฃููู
- **JavaScript ES6+**: ูููุธุงุฆู ุงูุชูุงุนููุฉ
- **CSS Grid & Flexbox**: ููุชุฎุทูุท ุงููุชูุฏู

## ุงููุชุทูุจุงุช
- ูุชุตูุญ ููุจ ุญุฏูุซ ูุฏุนู HTML5 ู CSS3 ู JavaScript
- ุฎุงุฏู ููุจ (Apache, Nginx, ุฃู ุฃู ุฎุงุฏู ุขุฎุฑ)
- ูุง ูุญุชุงุฌ Node.js ุฃู React ูู ุจูุฆุฉ ุงูุฅูุชุงุฌ

ุชู ุฅูุดุงุก ูุฐุง ุงููุชุฌุฑ ุจุงุณุชุฎุฏุงู ุฃุฏุงุฉ ุจูุงุก ุงููุชุงุฌุฑ ุงูุฅููุชุฑูููุฉ ูุน ุชูููุฉ ReactDOMServer.
ุชุงุฑูุฎ ุงูุฅูุดุงุก: ${new Date().toLocaleDateString('ar-SA')}

---

### ๐ง ูููุทูุฑูู

ุฅุฐุง ููุช ุชุฑูุฏ ุชุนุฏูู ุงูุชุตููู:
1. **CSS**: ุนุฏู ููู \`css/style.css\`
2. **JavaScript**: ุนุฏู ููู \`js/main.js\`
3. **ุงูุฃููุงู**: ุงุณุชุฎุฏู CSS Variables ุงููุนุฑูุฉ ูู \`:root\`
4. **ุงูุฎุทูุท**: ุบูุฑ ุฑุงุจุท Google Fonts ูู \`<head>\`

### ๐จ CSS Variables ุงููุชุงุญุฉ
\`\`\`css
:root {
  --primary-color: ${storeData.settings.primaryColor};
  --secondary-color: ${storeData.settings.secondaryColor};
  --accent-color: ${storeData.settings.accentColor};
  /* ... ุงููุฒูุฏ */
}
\`\`\`
`;
};