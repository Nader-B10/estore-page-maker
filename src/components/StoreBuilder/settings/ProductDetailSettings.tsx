import React from 'react';
import { StoreSettings } from '../../../types/store';

interface ProductDetailSettingsProps {
  settings: StoreSettings;
  onUpdateSettings: (settings: StoreSettings) => void;
}

export default function ProductDetailSettings({ settings, onUpdateSettings }: ProductDetailSettingsProps) {
  const handleChange = (field: keyof StoreSettings['productDetailSettings'], value: any) => {
    onUpdateSettings({
      ...settings,
      productDetailSettings: {
        ...settings.productDetailSettings,
        [field]: value,
      },
    });
  };

  const { productDetailSettings } = settings;

  return (
    <div className="bg-white rounded-lg p-6 shadow-sm">
      <h3 className="text-lg font-semibold mb-6">ุฅุนุฏุงุฏุงุช ุตูุญุฉ ุชูุงุตูู ุงูููุชุฌ</h3>
      
      <div className="space-y-6">
        {/* Display Options */}
        <div>
          <h4 className="font-medium mb-4 text-gray-800">ุนูุงุตุฑ ุงูุนุฑุถ</h4>
          <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
            <label className="flex items-center gap-3 p-3 border border-gray-200 rounded-lg hover:bg-gray-50 transition-colors">
              <input
                type="checkbox"
                checked={productDetailSettings.showRating}
                onChange={(e) => handleChange('showRating', e.target.checked)}
                className="rounded border-gray-300 text-blue-600 focus:ring-blue-500"
              />
              <div>
                <span className="font-medium text-gray-800">โญ ุงูุชููููุงุช</span>
                <p className="text-xs text-gray-600">ุนุฑุถ ูุฌูู ุงูุชูููู</p>
              </div>
            </label>

            <label className="flex items-center gap-3 p-3 border border-gray-200 rounded-lg hover:bg-gray-50 transition-colors">
              <input
                type="checkbox"
                checked={productDetailSettings.showReviewsCount}
                onChange={(e) => handleChange('showReviewsCount', e.target.checked)}
                className="rounded border-gray-300 text-blue-600 focus:ring-blue-500"
              />
              <div>
                <span className="font-medium text-gray-800">๐ ุนุฏุฏ ุงููุฑุงุฌุนุงุช</span>
                <p className="text-xs text-gray-600">ุนุฑุถ ุนุฏุฏ ุงูุชููููุงุช</p>
              </div>
            </label>

            <label className="flex items-center gap-3 p-3 border border-gray-200 rounded-lg hover:bg-gray-50 transition-colors">
              <input
                type="checkbox"
                checked={productDetailSettings.showOriginalPrice}
                onChange={(e) => handleChange('showOriginalPrice', e.target.checked)}
                className="rounded border-gray-300 text-blue-600 focus:ring-blue-500"
              />
              <div>
                <span className="font-medium text-gray-800">๐ฐ ุงูุณุนุฑ ุงูุฃุตูู</span>
                <p className="text-xs text-gray-600">ุนุฑุถ ุงูุณุนุฑ ูุจู ุงูุฎุตู</p>
              </div>
            </label>

            <label className="flex items-center gap-3 p-3 border border-gray-200 rounded-lg hover:bg-gray-50 transition-colors">
              <input
                type="checkbox"
                checked={productDetailSettings.showSavingsAmount}
                onChange={(e) => handleChange('showSavingsAmount', e.target.checked)}
                className="rounded border-gray-300 text-blue-600 focus:ring-blue-500"
              />
              <div>
                <span className="font-medium text-gray-800">๐ต ูุจูุบ ุงูุชูููุฑ</span>
                <p className="text-xs text-gray-600">ุนุฑุถ ุงููุจูุบ ุงููููุฑ</p>
              </div>
            </label>

            <label className="flex items-center gap-3 p-3 border border-gray-200 rounded-lg hover:bg-gray-50 transition-colors">
              <input
                type="checkbox"
                checked={productDetailSettings.showProductTags}
                onChange={(e) => handleChange('showProductTags', e.target.checked)}
                className="rounded border-gray-300 text-blue-600 focus:ring-blue-500"
              />
              <div>
                <span className="font-medium text-gray-800">๐ท๏ธ ุนูุงูุงุช ุงูููุชุฌ</span>
                <p className="text-xs text-gray-600">ุนุฑุถ ุงูุนูุงูุงุช ูุงููููุงุช ุงูููุชุงุญูุฉ</p>
              </div>
            </label>

            <label className="flex items-center gap-3 p-3 border border-gray-200 rounded-lg hover:bg-gray-50 transition-colors">
              <input
                type="checkbox"
                checked={productDetailSettings.showProductFeatures}
                onChange={(e) => handleChange('showProductFeatures', e.target.checked)}
                className="rounded border-gray-300 text-blue-600 focus:ring-blue-500"
              />
              <div>
                <span className="font-medium text-gray-800">โจ ููุฒุงุช ุงูุฎุฏูุฉ</span>
                <p className="text-xs text-gray-600">ุดุญู ูุฌุงููุ ุถูุงูุ ุฅุฑุฌุงุน</p>
              </div>
            </label>

            <label className="flex items-center gap-3 p-3 border border-gray-200 rounded-lg hover:bg-gray-50 transition-colors">
              <input
                type="checkbox"
                checked={productDetailSettings.showProductBadges}
                onChange={(e) => handleChange('showProductBadges', e.target.checked)}
                className="rounded border-gray-300 text-blue-600 focus:ring-blue-500"
              />
              <div>
                <span className="font-medium text-gray-800">๐๏ธ ุดุงุฑุงุช ุงูููุชุฌ</span>
                <p className="text-xs text-gray-600">ูููุฒุ ุงูุฃุนูู ูุจูุนุงูุ ุนุฑุถ</p>
              </div>
            </label>

            <label className="flex items-center gap-3 p-3 border border-gray-200 rounded-lg hover:bg-gray-50 transition-colors">
              <input
                type="checkbox"
                checked={productDetailSettings.showProductCategory}
                onChange={(e) => handleChange('showProductCategory', e.target.checked)}
                className="rounded border-gray-300 text-blue-600 focus:ring-blue-500"
              />
              <div>
                <span className="font-medium text-gray-800">๐ ูุฆุฉ ุงูููุชุฌ</span>
                <p className="text-xs text-gray-600">ุนุฑุถ ูุฆุฉ ุงูููุชุฌ</p>
              </div>
            </label>
          </div>
        </div>

        {/* Action Buttons */}
        <div>
          <h4 className="font-medium mb-4 text-gray-800">ุฃุฒุฑุงุฑ ุงูุนูู</h4>
          <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
            <label className="flex items-center gap-3 p-3 border border-gray-200 rounded-lg hover:bg-gray-50 transition-colors">
              <input
                type="checkbox"
                checked={productDetailSettings.showShareButton}
                onChange={(e) => handleChange('showShareButton', e.target.checked)}
                className="rounded border-gray-300 text-blue-600 focus:ring-blue-500"
              />
              <div>
                <span className="font-medium text-gray-800">๐ค ุฒุฑ ุงููุดุงุฑูุฉ</span>
                <p className="text-xs text-gray-600">ูุดุงุฑูุฉ ุงูููุชุฌ</p>
              </div>
            </label>

            <label className="flex items-center gap-3 p-3 border border-gray-200 rounded-lg hover:bg-gray-50 transition-colors">
              <input
                type="checkbox"
                checked={productDetailSettings.showFavoriteButton}
                onChange={(e) => handleChange('showFavoriteButton', e.target.checked)}
                className="rounded border-gray-300 text-blue-600 focus:ring-blue-500"
              />
              <div>
                <span className="font-medium text-gray-800">โค๏ธ ุฒุฑ ุงูููุถูุฉ</span>
                <p className="text-xs text-gray-600">ุฅุถุงูุฉ ููููุถูุฉ</p>
              </div>
            </label>
          </div>
        </div>

        {/* Related Products */}
        <div>
          <h4 className="font-medium mb-4 text-gray-800">ุงูููุชุฌุงุช ุฐุงุช ุงูุตูุฉ</h4>
          <div className="space-y-4">
            <label className="flex items-center gap-3 p-3 border border-gray-200 rounded-lg hover:bg-gray-50 transition-colors">
              <input
                type="checkbox"
                checked={productDetailSettings.showRelatedProducts}
                onChange={(e) => handleChange('showRelatedProducts', e.target.checked)}
                className="rounded border-gray-300 text-blue-600 focus:ring-blue-500"
              />
              <div>
                <span className="font-medium text-gray-800">๐ ุงูููุชุฌุงุช ุฐุงุช ุงูุตูุฉ</span>
                <p className="text-xs text-gray-600">ุนุฑุถ ููุชุฌุงุช ูุดุงุจูุฉ</p>
              </div>
            </label>

            {productDetailSettings.showRelatedProducts && (
              <div>
                <label className="block text-sm font-medium mb-2">ุนุฏุฏ ุงูููุชุฌุงุช ุฐุงุช ุงูุตูุฉ</label>
                <input
                  type="number"
                  min="1"
                  max="12"
                  value={productDetailSettings.relatedProductsLimit}
                  onChange={(e) => handleChange('relatedProductsLimit', parseInt(e.target.value))}
                  className="w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                />
              </div>
            )}
          </div>
        </div>

        {/* Advanced Options */}
        <div>
          <h4 className="font-medium mb-4 text-gray-800">ุฎูุงุฑุงุช ูุชูุฏูุฉ</h4>
          <div className="space-y-4">
            <label className="flex items-center gap-3 p-3 border border-gray-200 rounded-lg hover:bg-gray-50 transition-colors">
              <input
                type="checkbox"
                checked={productDetailSettings.enableImageZoom}
                onChange={(e) => handleChange('enableImageZoom', e.target.checked)}
                className="rounded border-gray-300 text-blue-600 focus:ring-blue-500"
              />
              <div>
                <span className="font-medium text-gray-800">๐ ุชูุจูุฑ ุงูุตูุฑุฉ</span>
                <p className="text-xs text-gray-600">ุฅููุงููุฉ ุชูุจูุฑ ุตูุฑุฉ ุงูููุชุฌ</p>
              </div>
            </label>

            <label className="flex items-center gap-3 p-3 border border-gray-200 rounded-lg hover:bg-gray-50 transition-colors">
              <input
                type="checkbox"
                checked={productDetailSettings.showProductDescription}
                onChange={(e) => handleChange('showProductDescription', e.target.checked)}
                className="rounded border-gray-300 text-blue-600 focus:ring-blue-500"
              />
              <div>
                <span className="font-medium text-gray-800">๐ ูุตู ุงูููุชุฌ</span>
                <p className="text-xs text-gray-600">ุนุฑุถ ุงููุตู ุงูุชูุตููู</p>
              </div>
            </label>
          </div>
        </div>
      </div>
    </div>
  );
}